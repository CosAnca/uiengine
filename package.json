{
  "private": true,
  "name": "@uiengine/monorepo",
  "description": "UIengine Monorepo",
  "license": "MIT",
  "author": "Dennis Reimann <mail@dennisreimann.de> (https://dennisreimann.de)",
  "homepage": "https://github.com/dennisreimann/uiengine",
  "bugs": "https://github.com/dennisreimann/uiengine",
  "repository": "dennisreimann/uiengine",
  "devDependencies": {
    "coveralls": "3.0.2",
    "eslint": "5.5.0",
    "eslint-config-standard": "12.0.0",
    "eslint-friendly-formatter": "4.0.1",
    "eslint-plugin-import": "2.14.0",
    "eslint-plugin-node": "7.0.1",
    "eslint-plugin-promise": "4.0.0",
    "eslint-plugin-standard": "4.0.0",
    "fs-extra": "7.0.0",
    "lerna": "3.2.1",
    "mocha": "5.2.0",
    "mocha-lcov-reporter": "1.3.0",
    "mocha-sinon": "2.1.0",
    "nyc": "13.0.1",
    "rimraf": "2.6.2",
    "sinon": "6.1.5",
    "standard": "12.0.1"
  },
  "scripts": {
    "clean": "lerna clean --yes && rimraf node_modules test/project/node_modules && yarn run packages:unlink",
    "setup": "yarn install && lerna bootstrap && yarn run packages:link && yarn run test-project:setup",
    "start": "lerna run start --parallel",
    "build": "lerna run build --parallel",
    "packages:link": "for pkg in $(ls -1FA packages | grep / | tr -d /); do cd packages/$pkg && yarn link && cd ../..; done",
    "packages:unlink": "for pkg in $(ls -1FA packages | grep / | tr -d /); do cd packages/$pkg && yarn unlink && cd ../..; done",
    "lint": "lerna run lint --parallel && eslint test/support && cd test/project && yarn run lint",
    "test": "cd packages && mocha -R dot */test",
    "test-watch": "yarn test -w --watch-extensions ejs,hbs,js,jsx,json,marko,md,pug,vhtml,vue,yml",
    "cover": "nyc yarn test",
    "release": "yarn run lint && yarn run cover && NODE_ENV=production yarn run build && lerna publish",
    "demo": "rimraf test/demo && sleep 1 && uiengine init --dir test/demo --demo && cd test/demo && uiengine build -s -w",
    "docs:deploy": "yarn run docs:deploy_latest && yarn run docs:deploy_version",
    "docs:deploy_latest": "cd docs && uiengine build && cd .. && $npm_package_config_deployment_command --exclude=v/ deploy/ docs/dist/ uiengine@uiengine.uix.space:virtual/uiengine.uix.space",
    "docs:deploy_version": "VERSION=`echo \"console.log(require('./packages/core/package.json').version);\" | node` && VERSION_PATH=/v/$VERSION && cd docs && uiengine build --override.ui.base=\"$VERSION_PATH/\" && cd .. && mkdir -p deploy/v && sed 's!RewriteBase /!RewriteBase '$VERSION_PATH'/!' deploy/.htaccess > deploy/v/.htaccess && $npm_package_config_deployment_command --rsync-path=\"mkdir -p virtual/uiengine.uix.space/$VERSION_PATH && rsync\" deploy/v/ docs/dist/ uiengine@uiengine.uix.space:virtual/uiengine.uix.space/$VERSION_PATH",
    "test-project": "cd test/project && NODE_ENV=development yarn start",
    "test-project:setup": "cd test/project && yarn setup",
    "test-project:build": "cd test/project && yarn install && NODE_ENV=production yarn build",
    "test-project:deploy": "yarn run test-project:build && $npm_package_config_deployment_command deploy/ test/tmp/ uiengine@uiengine-sample-project.uix.space:virtual/uiengine-sample-project.uix.space"
  },
  "config": {
    "deployment": {
      "command": "rsync -ravzulO --chmod=u=rwX,g=rX --delete-after"
    }
  },
  "workspaces": [
    "packages/*"
  ],
  "nyc": {
    "exclude": [
      "packages/**/lib",
      "packages/**/test",
      "test"
    ]
  },
  "standard": {
    "globals": [
      "after",
      "afterEach",
      "before",
      "beforeEach",
      "describe",
      "it"
    ]
  }
}
